"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[414],{3905:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var l=a.createContext({}),c=function(t){var e=a.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},u=function(t){var e=c(t.components);return a.createElement(l.Provider,{value:e},t.children)},p="mdxType",h={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,l=t.parentName,u=s(t,["components","mdxType","originalType","parentName"]),p=c(n),m=r,d=p["".concat(l,".").concat(m)]||p[m]||h[m]||o;return n?a.createElement(d,i(i({ref:e},u),{},{components:n})):a.createElement(d,i({ref:e},u))}));function d(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s[p]="string"==typeof t?t:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5604:function(t,e,n){n.r(e),n.d(e,{assets:function(){return l},contentTitle:function(){return i},default:function(){return h},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return c}});var a=n(3117),r=(n(7294),n(3905));const o={},i="History",s={unversionedId:"specs/banking/history",id:"specs/banking/history",title:"History",description:"Along with the main navigation, the history page should include the following content:",source:"@site/docs/specs/banking/history.md",sourceDirName:"specs/banking",slug:"/specs/banking/history",permalink:"/swan-partner-frontend/specs/banking/history",draft:!1,editUrl:"https://github.com/swan-io/swan-partner-frontend/edit/main/docs/docs/specs/banking/history.md",tags:[],version:"current",frontMatter:{},sidebar:"specs",previous:{title:"Navigation",permalink:"/swan-partner-frontend/specs/banking/navigation"},next:{title:"Account",permalink:"/swan-partner-frontend/specs/banking/account"}},l={},c=[{value:"History tab",id:"history-tab",level:2},{value:"GraphQL query",id:"graphql-query",level:3},{value:"Account statements",id:"account-statements",level:3},{value:"Upcoming tab",id:"upcoming-tab",level:2},{value:"GraphQL query",id:"graphql-query-1",level:3}],u={toc:c},p="wrapper";function h(t){let{components:e,...o}=t;return(0,r.kt)(p,(0,a.Z)({},u,o,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"history"},"History"),(0,r.kt)("p",null,"Along with the main navigation, the ",(0,r.kt)("strong",{parentName:"p"},"history page")," should include the following content:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Available ",(0,r.kt)("strong",{parentName:"li"},"account balance")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"History tab"),": list of past transactions"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Upcoming tab"),": list of upcoming transactions")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Screenshot of the main history page with a callout on account balance and tabs",src:n(6525).Z,width:"2782",height:"1846"})),(0,r.kt)("h2",{id:"history-tab"},"History tab"),(0,r.kt)("p",null,"The body of the history tab should include the following content:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"List of past transactions",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Name of the transaction"),(0,r.kt)("li",{parentName:"ul"},"Transaction method (such as instant or recurring transfer)"),(0,r.kt)("li",{parentName:"ul"},"Date"),(0,r.kt)("li",{parentName:"ul"},"Amount"))),(0,r.kt)("li",{parentName:"ul"},"Button to download account statements"),(0,r.kt)("li",{parentName:"ul"},"Filters",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Updated after"),(0,r.kt)("li",{parentName:"ul"},"Updated before"),(0,r.kt)("li",{parentName:"ul"},"Payment method"),(0,r.kt)("li",{parentName:"ul"},"Status"))),(0,r.kt)("li",{parentName:"ul"},"Refresh button (refreshes the list of transactions)"),(0,r.kt)("li",{parentName:"ul"},"Search (only searches transactions)")),(0,r.kt)("admonition",{title:"History tab statuses",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The history tab shouldn't display transactions with the status ",(0,r.kt)("inlineCode",{parentName:"p"},"Released")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"Upcoming"),".\nThese are card authorizations, not actual transactions, and are irrelevant for the end user.")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Screenshot of the history tab with a callout on body content",src:n(7129).Z,width:"2782",height:"1846"})),(0,r.kt)("h3",{id:"graphql-query"},"GraphQL query"),(0,r.kt)("p",null,"Use the following GraphQL query to retrieve information about the transaction history."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"GraphQL query"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"query {\n  account(accountId: $ACCOUNT_ID) {\n    transactions(first: $first, after: $after, filters: $filters, orderBy: $orderBy) {\n      pageInfo {\n        hasNextPage\n        endCursor\n        startCursor\n        hasPreviousPage\n      }\n      edges {\n        node {\n          ...TransactionDetails\n        }\n      }\n    }\n  }\n}\n"))),(0,r.kt)("h3",{id:"account-statements"},"Account statements"),(0,r.kt)("p",null,"Always provide a method for users to ",(0,r.kt)("strong",{parentName:"p"},"download their transaction history"),"."),(0,r.kt)("p",null,"The source code provides this with button in the history tab.\nWhen a user clicks ",(0,r.kt)("strong",{parentName:"p"},"Account statements"),", a pop-in appears with a list of months for which downloadable account statements are available."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Screenshot of the history tab with a callout on download account statement button",src:n(2954).Z,width:"2782",height:"1846"})),(0,r.kt)("h2",{id:"upcoming-tab"},"Upcoming tab"),(0,r.kt)("p",null,"The body of the upcoming tab should include the following content:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"List of upcoming transactions",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Name of the transaction"),(0,r.kt)("li",{parentName:"ul"},"Transaction method (such as instant or recurring)"),(0,r.kt)("li",{parentName:"ul"},"Date"),(0,r.kt)("li",{parentName:"ul"},"Amount")))),(0,r.kt)("admonition",{title:"Upcoming tab statuses",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The upcoming tab should ",(0,r.kt)("strong",{parentName:"p"},"only")," display transactions with the status ",(0,r.kt)("inlineCode",{parentName:"p"},"Upcoming"),".\nIt is recommended not to provide filters.")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Screenshot of the upcoming tab with a callout on body content",src:n(9236).Z,width:"2782",height:"1846"})),(0,r.kt)("h3",{id:"graphql-query-1"},"GraphQL query"),(0,r.kt)("p",null,"Use the following GraphQL query to retrieve information about upcoming transactions."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"GraphQL Query"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"query {\n  account(accountId: $ACCOUNT_ID) {\n    transactions(\n      first: $first\n      after: $after\n      filters: { status: Upcoming }\n      orderBy: { field: executionDate, direction: Asc }\n    ) {\n      pageInfo {\n        hasNextPage\n        endCursor\n        startCursor\n        hasPreviousPage\n      }\n      edges {\n        node {\n          ...TransactionDetails\n        }\n      }\n    }\n  }\n}\n"))))}h.isMDXComponent=!0},2954:function(t,e,n){e.Z=n.p+"assets/images/history-account-statements-ecc7eff95d7ad6e541845fe8e1d16382.png"},6525:function(t,e,n){e.Z=n.p+"assets/images/history-main-a42538b9cffa21283d7bc2cb4cea4f31.png"},7129:function(t,e,n){e.Z=n.p+"assets/images/history-tab-history-08c672070a8e169b0ada898018c7812f.png"},9236:function(t,e,n){e.Z=n.p+"assets/images/history-tab-upcoming-744ece814a73d14eeb54ad0eb99101bf.png"}}]);