"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[952],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return b}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(t),f=o,b=u["".concat(c,".").concat(f)]||u[f]||p[f]||i;return t?r.createElement(b,a(a({ref:n},d),{},{components:t})):r.createElement(b,a({ref:n},d))}));function b(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=f;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[u]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},7377:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return a},default:function(){return p},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return l}});var r=t(3117),o=(t(7294),t(3905));const i={title:"Onboarding flows",sidebar_label:"Flows"},a=void 0,s={unversionedId:"specs/onboarding/onboarding",id:"specs/onboarding/onboarding",title:"Onboarding flows",description:"Onboarding is a big form that End Customers fill in order to create their bank account. It enables us to collect the necessary informations and documents.",source:"@site/docs/specs/onboarding/onboarding.md",sourceDirName:"specs/onboarding",slug:"/specs/onboarding/",permalink:"/swan-partner-frontend/specs/onboarding/",draft:!1,editUrl:"https://github.com/swan-io/swan-partner-frontend/edit/main/docs/docs/specs/onboarding/onboarding.md",tags:[],version:"current",frontMatter:{title:"Onboarding flows",sidebar_label:"Flows"},sidebar:"specs",next:{title:"Individual Onboarding",permalink:"/swan-partner-frontend/specs/onboarding/individual"}},c={},l=[{value:"Types of flows",id:"types-of-flows",level:2},{value:"Onboarding finalization",id:"onboarding-finalization",level:2}],d={toc:l},u="wrapper";function p(e){let{components:n,...i}=e;return(0,o.kt)(u,(0,r.Z)({},d,i,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Onboarding is a big form that End Customers fill in order to ",(0,o.kt)("strong",{parentName:"p"},"create their bank account"),". It enables us to ",(0,o.kt)("strong",{parentName:"p"},"collect the necessary informations and documents"),"."),(0,o.kt)("p",null,"The onboarding UI uses the ",(0,o.kt)("strong",{parentName:"p"},"unauthenticated API"),", and ",(0,o.kt)("strong",{parentName:"p"},"requires an existing onboarding (we store the information behind its ID, as the user isn\u2019t authenticated yet)"),"."),(0,o.kt)("p",null,"Once the onboarding is fetched, we can route to the correct flow given the ",(0,o.kt)("inlineCode",{parentName:"p"},"onboarding.info")," typename."),(0,o.kt)("h2",{id:"types-of-flows"},"Types of flows"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/specs/onboarding/individual"},"Individual onboarding")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/specs/onboarding/company"},"Company onboarding"))),(0,o.kt)("h2",{id:"onboarding-finalization"},"Onboarding finalization"),(0,o.kt)("p",null,"In order to avoid locking users when there are some discrepancies between client-side & server-side validation, we prevent finalizing an onboarding if its ",(0,o.kt)("inlineCode",{parentName:"p"},"statusInfo")," is invalid."),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(441).Z,width:"2536",height:"1792"})))}p.isMDXComponent=!0},441:function(e,n,t){n.Z=t.p+"assets/images/validation-009c9de568d6ad827b9597c9e166376f.png"}}]);